[{"D:\\programming\\Reactivities\\client-app\\src\\index.tsx":"1","D:\\programming\\Reactivities\\client-app\\src\\serviceWorker.ts":"2","D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx":"3","D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"4","D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx":"5","D:\\programming\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"6","D:\\programming\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"7","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"8","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"9","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"10","D:\\programming\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"12","D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"13","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"14","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"15","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"16","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"17","D:\\programming\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"18","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"19","D:\\programming\\Reactivities\\client-app\\src\\reportWebVitals.ts":"20","D:\\programming\\Reactivities\\client-app\\src\\app\\stores\\store.ts":"21","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx":"22","D:\\programming\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts":"23","D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx":"24","D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx":"25","D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx":"26","D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx":"27"},{"size":853,"mtime":1613257022093,"results":"28","hashOfConfig":"29"},{"size":5201,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":256,"mtime":1577482138865,"results":"31","hashOfConfig":"29"},{"size":1518,"mtime":1613242748061,"results":"32","hashOfConfig":"29"},{"size":551,"mtime":1577649166037,"results":"33","hashOfConfig":"29"},{"size":979,"mtime":1613242725058,"results":"34","hashOfConfig":"29"},{"size":781,"mtime":1613242148132,"results":"35","hashOfConfig":"29"},{"size":1147,"mtime":1613248179758,"results":"36","hashOfConfig":"29"},{"size":1353,"mtime":1613243837258,"results":"37","hashOfConfig":"29"},{"size":4171,"mtime":1613256907068,"results":"38","hashOfConfig":"29"},{"size":3652,"mtime":1613257091532,"results":"39","hashOfConfig":"29"},{"size":757,"mtime":1613246255919,"results":"40","hashOfConfig":"29"},{"size":381,"mtime":1613232334794,"results":"41","hashOfConfig":"29"},{"size":1969,"mtime":1613255120428,"results":"42","hashOfConfig":"29"},{"size":1761,"mtime":1613255214601,"results":"43","hashOfConfig":"29"},{"size":2436,"mtime":1613247617703,"results":"44","hashOfConfig":"29"},{"size":2411,"mtime":1613247587254,"results":"45","hashOfConfig":"29"},{"size":2028,"mtime":1613257037047,"results":"46","hashOfConfig":"29"},{"size":1435,"mtime":1613247119665,"results":"47","hashOfConfig":"29"},{"size":438,"mtime":1613214840397,"results":"48","hashOfConfig":"29"},{"size":357,"mtime":1613235876952,"results":"49","hashOfConfig":"29"},{"size":1028,"mtime":1613248067985,"results":"50","hashOfConfig":"29"},{"size":267,"mtime":1613256665526,"results":"51","hashOfConfig":"29"},{"size":652,"mtime":1613256587557,"results":"52","hashOfConfig":"29"},{"size":631,"mtime":1613256631455,"results":"53","hashOfConfig":"29"},{"size":790,"mtime":1613256519913,"results":"54","hashOfConfig":"29"},{"size":945,"mtime":1613256559138,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lzckhc",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\programming\\Reactivities\\client-app\\src\\index.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\serviceWorker.ts",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\ScrollToTop.tsx",[],["115","116"],"D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\NotFound.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["117","118"],"import React, { useEffect, useState } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport  ActivityList from '../dashboard/ActivityList';\r\nimport { observer } from 'mobx-react-lite';\r\nimport  LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n    \r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry } = activityStore;\r\n    const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n        if (activityRegistry.size <= 1) loadActivities();\r\n\t},  [activityRegistry.size, loadActivities]);\r\n\r\n\r\n\tif (activityStore.loadingInitial) return <LoadingComponent content='Loading activities...' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={ 10 }>\r\n                <ActivityList />               \r\n            </Grid.Column>\r\n            <Grid.Column width={ 6 }>\r\n               <ActivityFilters/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default observer(ActivityDashboard); ","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["119"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { Activity} from \"../models/activity\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\n\r\naxios.interceptors.response.use(undefined, error => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure to start server\");\r\n  }\r\n  const { status, data, config } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\");\r\n  }\r\n\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check terminal window for more info\");\r\n  }\r\n});\r\n\r\nconst responseBody  = <T> (response: AxiosResponse<T>) => response.data;\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay)\r\n  })\r\n}\r\n\r\naxios.interceptors.response.use(async response => {\r\n  try {\r\n    await sleep(1000);\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    return await Promise.reject(error);\r\n  }\r\n})\r\n\r\nconst requests = {\r\n  get: <T> (url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T> (url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  put: <T> (url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T> (url: string) => axios.delete<T>(url).then(responseBody)\r\n};\r\n\r\nconst activitiesController = \"/activities\";\r\n\r\nconst Activities = {\r\n  list: () => requests.get<Activity[]>(activitiesController),\r\n  details: (id: string) => requests.get<Activity>(`${activitiesController}/${id}`), \r\n  delete: (id: string) => requests.del<Activity>(`${activitiesController}/${id}`),\r\n  create: (activity: Activity) => requests.post<void>('/activities', activity),\r\n  update: (activity: Activity) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n};\r\n\r\nexport default { Activities };\r\n","D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",["120"],"import React from \"react\";\r\nimport { Item, Button, Segment, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport {format} from 'date-fns';\r\n\r\ninterface Props {\r\n  activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image size='tiny' circular src='/assets/user.png' />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>Hosted by Bob</Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n          <span>\r\n              <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n              <Icon name='marker' /> {activity.venue}\r\n          </span>\r\n      </Segment>\r\n      <Segment secondary>Attendees will go here</Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated='right'\r\n          content='View'\r\n          color='teal'\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n\r\n\r\n","D:\\programming\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\stores\\store.ts",[],"D:\\programming\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityFilters.tsx",["121"],"import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n    \r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item \r\n                    content='All Activites'                  \r\n                   \r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm going\" \r\n                  \r\n                   \r\n                />\r\n                <Menu.Item \r\n                    content=\"I'm hosting\"                   \r\n                   \r\n                />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar                \r\n                value={ new Date()}\r\n            />\r\n        </>\r\n    )\r\n})","D:\\programming\\Reactivities\\client-app\\src\\app\\common\\options\\categoryOptions.ts",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextArea.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MyTextInput.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MyDateInput.tsx",[],"D:\\programming\\Reactivities\\client-app\\src\\app\\common\\form\\MySelectInput.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":13,"column":12,"nodeType":"128","messageId":"129","endLine":13,"endColumn":23},{"ruleId":"126","severity":1,"message":"130","line":13,"column":25,"nodeType":"128","messageId":"129","endLine":13,"endColumn":39},{"ruleId":"131","severity":1,"message":"132","line":64,"column":1,"nodeType":"133","endLine":64,"endColumn":31},{"ruleId":"126","severity":1,"message":"134","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},{"ruleId":"126","severity":1,"message":"135","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":18},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"@typescript-eslint/no-unused-vars","'loadingNext' is assigned a value but never used.","Identifier","unusedVar","'setLoadingNext' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'observer' is defined but never used.","'useStore' is defined but never used.","no-global-assign","no-unsafe-negation"]